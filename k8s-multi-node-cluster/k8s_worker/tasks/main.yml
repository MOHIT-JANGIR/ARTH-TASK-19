---
# tasks file for K8s-worker

- debug:
      msg: "Now configuring the worker nodes.."
- name: "Installing docker"
  package:
            name: "docker"
            state: present
- name: "Starting and enabling docker service permanently"
  service:
            name: "docker"
            state: started
            enabled: yes
- name: "Configuring repository for K8s"
  yum_repository:
            name: "K8s-repo"
            description: "Repository for K8s"
            baseurl: "https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"
            gpgcheck: yes
            repo_gpgcheck: yes
            description: Kubernetes
            gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            enabled: yes
- name: "Installing kubeadm, kubectl and kubelet"
  package:
       name: "{{ packages }}"
       state: present
       update_cache: yes
  vars:
       packages:
        - kubelet
        - kubeadm
        - kubectl
- name: "Starting and enabling kubelet service permanently"
  service:
            name: "kubelet"
            state: started
            enabled: yes
- name: "Changing the driver to systemd"
  copy:
            dest: "/etc/docker/daemon.json"
            content: '{
                      "exec-opts": ["native.cgroupdriver=systemd"]
                      }'
- name: "Restarting docker service"
  service:
            name: "docker"
            state: restarted
- name: "Installing iproute-tc software"
  package:
            name: "iproute-tc"
            state: present
- name: "Configuring network"
  copy:
            dest: "/etc/sysctl.d/k8s.conf"
            content:
                - "net.bridge.bridge-nf-call-ip6tables = 1"
                - "net.bridge.bridge-nf-call-iptables = 1"
  when: false
- name: appending systcl file
  shell: "cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf \n net.bridge.bridge-nf-call-ip6tables = 1 \n net.bridge.bridge-nf-call-iptables = 1"
- name: "Starting sysctl service"
  command: "sudo sysctl --system"
- name: Copy the join command to server location
  copy: 
      src: /root/join-command 
      dest: /tmp/join-command.sh 
      mode: +x 

- name: join command
  shell: "sh /tmp/join-command.sh"
- name: "Joining the K8s worker node to the master node"
  command: "{{ joincmd }}"
  when: false

- debug:
        msg: "Voila! instances are configured as worker nodes :)"


